#include<bits/stdc++.h>
using namespace std;

int *array_queries(int N, int M, int A[], int B[], int Q, int queries[], int out_n[])
{
    int t;
    cin>>t;
    while(t--)
    {
        int ans1,ans2,ans3,ans4;
        for(int i=1; i<N+1; i++){      //  to evaluate the fromula
            for(int j=1; j<M+1; j++){
                out_n[0]= A[i]*B[j]*(i+j) % 998244353;
            }
        }
        return out_n;
        if(Q == 1){
            swap(A[queries[1]],B[queries[2]]);
            for(int i=1; i<N+1; i++){      //  to evaluate the fromula
                for(int j=1; j<M+1; j++){
                    out_n[1] = (A[i]*B[j]*(i+j)) % 998244353;
                }
            }
        return out_n;
        }
        if(Q == 2){
            swap(A[queries[4]],A[queries[5]]);
            for(int i=1; i<N+1; i++){      //  to evaluate the fromula
                for(int j=1; j<M+1; j++){
                    out_n[2] = (A[i]*B[j]*(i+j)) % 998244353;
                }
            }
        return out_n;
        }
        if(Q == 3){
            swap(B[queries[7]],B[queries[8]]);
            for(int i=1; i<N+1; i++){      //  to evaluate the fromula
                for(int j=1; j<M+1; j++){
                    out_n[3] = (A[i]*B[j]*(i+j)) % 998244353;
                }
            }
        return out_n;
        }
    }
}


int main()
{
    int N=2;
    int M=2;
    int A[]={2,4};
    int B[] = {1,5};
    int Q=1; int out_n[]={0};
    int queries[3]={1,2,1}; 
    int *output =  array_queries(N,M,A,B,Q,queries,out_n);
    for (int i = 0; i < N; i++)
        {
            cout << out_n[i]<<endl;
        }
    

    return 0;
}
